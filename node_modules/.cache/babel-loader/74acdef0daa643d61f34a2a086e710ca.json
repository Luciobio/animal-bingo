{"ast":null,"code":"var _jsxFileName = \"/home/luciobio/Henry/animal-bingo/src/components/Card.jsx\";\nimport React, { useState, useEffect } from 'react';\n\nconst Card = ({\n  animalArray\n}) => {\n  const [animals, setAnimals] = useState(animalArray);\n  const [max2, setMax2] = useState(17);\n\n  const getRandomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  const getAnimals = () => {\n    let selectedAnimals = [];\n\n    for (let i = 0; i < 9; i++) {\n      const num = getRandomInt(0, max2);\n      setMax2(max2 - 1);\n      selectedAnimals.push(animals.splice(num, 1)[0]);\n    }\n\n    setAnimals(selectedAnimals);\n  };\n\n  useEffect(() => {\n    getAnimals();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Bingo\"), animals && animals.map(animal => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }\n    }, animal.name), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"image\",\n      src: animal.picture,\n      alt: animal.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 29\n      }\n    }));\n  }));\n};\n\nexport default Card;","map":{"version":3,"sources":["/home/luciobio/Henry/animal-bingo/src/components/Card.jsx"],"names":["React","useState","useEffect","Card","animalArray","animals","setAnimals","max2","setMax2","getRandomInt","min","max","Math","floor","random","getAnimals","selectedAnimals","i","num","push","splice","map","animal","name","picture"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmB;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAACG,WAAD,CAAtC;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAE,EAAF,CAAhC;;AAEA,QAAMQ,YAAY,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/B,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACD,GAFH;;AAIA,QAAMK,UAAU,GAAG,MAAM;AACrB,QAAIC,eAAe,GAAG,EAAtB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAC,CAAjB,EAAoBA,CAAC,EAArB,EAAyB;AACrB,YAAMC,GAAG,GAAGT,YAAY,CAAC,CAAD,EAAGF,IAAH,CAAxB;AACAC,MAAAA,OAAO,CAACD,IAAI,GAAE,CAAP,CAAP;AACAS,MAAAA,eAAe,CAACG,IAAhB,CAAqBd,OAAO,CAACe,MAAR,CAAeF,GAAf,EAAmB,CAAnB,EAAsB,CAAtB,CAArB;AACH;;AACDZ,IAAAA,UAAU,CAACU,eAAD,CAAV;AACD,GARH;;AAUAd,EAAAA,SAAS,CAAE,MAAM;AACba,IAAAA,UAAU;AACb,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAGQV,OAAO,IAAIA,OAAO,CAACgB,GAAR,CAAaC,MAAM,IAAI;AAC9B,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,MAAM,CAACC,IAAb,CADJ,eAEI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,GAAG,EAAED,MAAM,CAACE,OAAnC;AAA4C,MAAA,GAAG,EAAEF,MAAM,CAACC,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH,GAPU,CAHnB,CADJ;AAeH,CArCD;;AAuCA,eAAepB,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nconst Card = ({animalArray}) => {\n    const [animals, setAnimals] = useState(animalArray);\n    const [max2, setMax2] = useState (17);\n\n    const getRandomInt = (min, max) => {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n      }\n\n    const getAnimals = () => {\n        let selectedAnimals = []\n        for(let i = 0; i<9; i++) {\n            const num = getRandomInt(0,max2);\n            setMax2(max2 -1);\n            selectedAnimals.push(animals.splice(num,1)[0])\n        }\n        setAnimals(selectedAnimals);\n      };\n\n    useEffect( () => {\n        getAnimals()\n    },[]);\n\n    return (\n        <div>\n            <h1>Bingo</h1>\n            {\n                animals && animals.map( animal => {\n                    return (\n                        <div>\n                            <div>{animal.name}</div>\n                            <img className=\"image\" src={animal.picture} alt={animal.name}/>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}