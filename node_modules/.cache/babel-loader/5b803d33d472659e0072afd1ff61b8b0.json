{"ast":null,"code":"var _jsxFileName = \"/home/luciobio/Henry/animal-bingo/src/components/Card.jsx\";\nimport React, { useState, useEffect } from 'react';\n\nconst Card = ({\n  animalArray\n}) => {\n  const [animals, setAnimals] = useState(animalArray);\n  const [max2, setMax2] = useState(17);\n\n  const getRandomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  const getAnimals = () => {\n    const num = getRandomInt(0, max2);\n    setMax(max2 - 1);\n    const kicked = animals[num];\n    const instrumentList = [...list, kicked];\n    setInstrument(kicked);\n    setList(instrumentList);\n    let filteredInstruments = instruments.filter(instrument => {\n      return instrument.id !== kicked.id;\n    });\n    setInstruments(filteredInstruments);\n  };\n\n  getAnimals();\n  useEffect(() => {}, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Bingo\"), animals && animals.map(animal => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"animalCont\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    }, animal.name), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"image\",\n      src: animal.picture,\n      alt: animal.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }));\n  }));\n};\n\nexport default Card;","map":{"version":3,"sources":["/home/luciobio/Henry/animal-bingo/src/components/Card.jsx"],"names":["React","useState","useEffect","Card","animalArray","animals","setAnimals","max2","setMax2","getRandomInt","min","max","Math","floor","random","getAnimals","num","setMax","kicked","instrumentList","list","setInstrument","setList","filteredInstruments","instruments","filter","instrument","id","setInstruments","map","animal","name","picture"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmB;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAACG,WAAD,CAAtC;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAE,EAAF,CAAhC;;AAEA,QAAMQ,YAAY,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/B,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACD,GAFH;;AAIA,QAAMK,UAAU,GAAG,MAAM;AACrB,UAAMC,GAAG,GAAGP,YAAY,CAAC,CAAD,EAAGF,IAAH,CAAxB;AACAU,IAAAA,MAAM,CAACV,IAAI,GAAC,CAAN,CAAN;AAEA,UAAMW,MAAM,GAAGb,OAAO,CAACW,GAAD,CAAtB;AACA,UAAMG,cAAc,GAAG,CAAC,GAAGC,IAAJ,EAAUF,MAAV,CAAvB;AACAG,IAAAA,aAAa,CAACH,MAAD,CAAb;AACAI,IAAAA,OAAO,CAACH,cAAD,CAAP;AAEA,QAAII,mBAAmB,GAAGC,WAAW,CAACC,MAAZ,CAAmBC,UAAU,IAAI;AACvD,aAAOA,UAAU,CAACC,EAAX,KAAkBT,MAAM,CAACS,EAAhC;AACH,KAFyB,CAA1B;AAGAC,IAAAA,cAAc,CAACL,mBAAD,CAAd;AACD,GAbH;;AAeER,EAAAA,UAAU;AAEZb,EAAAA,SAAS,CAAE,MAAM,CAChB,CADQ,EACP,EADO,CAAT;AAGA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAGQG,OAAO,IAAIA,OAAO,CAACwB,GAAR,CAAaC,MAAM,IAAI;AAC9B,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,MAAM,CAACC,IAAb,CADJ,eAEI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,GAAG,EAAED,MAAM,CAACE,OAAnC;AAA4C,MAAA,GAAG,EAAEF,MAAM,CAACC,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH,GAPU,CAHnB,CADJ;AAeH,CA3CD;;AA6CA,eAAe5B,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nconst Card = ({animalArray}) => {\n    const [animals, setAnimals] = useState(animalArray);\n    const [max2, setMax2] = useState (17);\n\n    const getRandomInt = (min, max) => {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n      }\n\n    const getAnimals = () => {\n        const num = getRandomInt(0,max2);\n        setMax(max2-1);\n    \n        const kicked = animals[num];\n        const instrumentList = [...list, kicked];\n        setInstrument(kicked);\n        setList(instrumentList);\n        \n        let filteredInstruments = instruments.filter(instrument => {\n            return instrument.id !== kicked.id;\n        });\n        setInstruments(filteredInstruments);\n      };\n\n      getAnimals();\n\n    useEffect( () => {\n    },[]);\n\n    return (\n        <div>\n            <h1>Bingo</h1>\n            {\n                animals && animals.map( animal => {\n                    return (\n                        <div className=\"animalCont\">\n                            <div>{animal.name}</div>\n                            <img className=\"image\" src={animal.picture} alt={animal.name}/>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}